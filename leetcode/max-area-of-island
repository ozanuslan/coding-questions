object Solution {
    def maxAreaOfIsland(grid: Array[Array[Int]]): Int = {
        val visited = Array.ofDim[Boolean](grid.length, grid(0).length)
        var max = 0

        def dfs(i: Int, j: Int): Int = {
            if (i < 0 || i >= grid.length || j < 0 || j >= grid(0).length || visited(i)(j) || grid(i)(j) == 0) {
                return 0
            }
            visited(i)(j) = true
            1 + dfs(i + 1, j) + dfs(i - 1, j) + dfs(i, j + 1) + dfs(i, j - 1)
        }

        for (i <- 0 until grid.length) {
            for (j <- 0 until grid(0).length) {
                if (grid(i)(j) == 1 && !visited(i)(j)) {
                    max = Math.max(max, dfs(i, j))
                }
            }
        }
        
        max        
    }
}
